/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ibms;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mihir Zalavadiya
 */
public class AddItem extends javax.swing.JFrame {

    Connection conn=null;
    PreparedStatement pst=null;
    String prodname,description,categoryid,supplierid,qty,billno,gst,currentprice,costprice;
    int billno1;
    Statement st;
    int i_no = 0;
    
    private Vector<Vector<String>> data;
    private Vector<String> header;
    public static final String DATE_FORMAT_NOW = "yyyy-MM-dd HH:mm:ss";
    Calendar cal; 
    
    public AddItem() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(AddItem.DISPOSE_ON_CLOSE);
        setVisible(true);
        cal = Calendar.getInstance();
        
        ComboCategoryID();
        ComboSupplierID();
        initJtable();
        
        lblproductid.setEnabled(false);
        
        //Bill No auto increment
        try
        {
        conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
        
        ResultSet rs = st.executeQuery("select max(Bill_No) from Product");
        rs.next();
        
        if(rs!=null)
        {
            i_no = rs.getInt(1);
            i_no++;
        }
        else
        {
            i_no = 1;
        }
        
        txtproduct_billno.setText(""+i_no);
        txtproduct_billno.setEditable(false);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtproduct_name = new javax.swing.JTextField();
        lblproduct_name = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtproduct_description = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtproduct_currentprice = new javax.swing.JTextField();
        lblproduct_currentprice = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtproduct_costprice = new javax.swing.JTextField();
        lblproduct_costprice = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtproduct_quantity = new javax.swing.JTextField();
        lblproduct_quantity = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtproduct_billno = new javax.swing.JTextField();
        lblproduct_billno = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtproduct_gst = new javax.swing.JTextField();
        btnproduct_save = new javax.swing.JButton();
        btnproduct_update = new javax.swing.JButton();
        btnproduct_clear = new javax.swing.JButton();
        btnproduct_exit = new javax.swing.JButton();
        cmbcategory_id = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        cmbspplier_id = new javax.swing.JComboBox();
        lblproductid = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        itemtable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Product Name");
        jLabel1.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel1.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel1.setPreferredSize(new java.awt.Dimension(75, 14));

        txtproduct_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproduct_nameActionPerformed(evt);
            }
        });

        lblproduct_name.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblproduct_name.setForeground(new java.awt.Color(255, 0, 0));

        jLabel3.setText("Description");
        jLabel3.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel3.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel3.setPreferredSize(new java.awt.Dimension(75, 14));

        txtproduct_description.setColumns(20);
        txtproduct_description.setRows(5);
        jScrollPane1.setViewportView(txtproduct_description);

        jLabel4.setText("Category ID");
        jLabel4.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel4.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel4.setPreferredSize(new java.awt.Dimension(75, 14));

        jLabel5.setText("Current Price");
        jLabel5.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel5.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel5.setPreferredSize(new java.awt.Dimension(75, 14));

        txtproduct_currentprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproduct_currentpriceActionPerformed(evt);
            }
        });

        lblproduct_currentprice.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblproduct_currentprice.setForeground(new java.awt.Color(255, 0, 0));

        jLabel6.setText("Cost Price");
        jLabel6.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel6.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel6.setPreferredSize(new java.awt.Dimension(75, 14));

        txtproduct_costprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproduct_costpriceActionPerformed(evt);
            }
        });

        lblproduct_costprice.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblproduct_costprice.setForeground(new java.awt.Color(255, 0, 0));

        jLabel7.setText("Quantity");
        jLabel7.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel7.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel7.setPreferredSize(new java.awt.Dimension(75, 14));

        txtproduct_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproduct_quantityActionPerformed(evt);
            }
        });

        lblproduct_quantity.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblproduct_quantity.setForeground(new java.awt.Color(255, 0, 0));

        jLabel8.setText("Bill No.");
        jLabel8.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel8.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel8.setPreferredSize(new java.awt.Dimension(75, 14));

        txtproduct_billno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproduct_billnoActionPerformed(evt);
            }
        });

        lblproduct_billno.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblproduct_billno.setForeground(new java.awt.Color(255, 0, 0));

        jLabel9.setText("GST");
        jLabel9.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel9.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel9.setPreferredSize(new java.awt.Dimension(75, 14));

        btnproduct_save.setText("Save");
        btnproduct_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnproduct_saveActionPerformed(evt);
            }
        });
        btnproduct_save.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnproduct_saveKeyPressed(evt);
            }
        });

        btnproduct_update.setText("Update");
        btnproduct_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnproduct_updateActionPerformed(evt);
            }
        });
        btnproduct_update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnproduct_updateKeyPressed(evt);
            }
        });

        btnproduct_clear.setText("Clear");
        btnproduct_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnproduct_clearActionPerformed(evt);
            }
        });
        btnproduct_clear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnproduct_clearKeyPressed(evt);
            }
        });

        btnproduct_exit.setText("Exit");
        btnproduct_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnproduct_exitActionPerformed(evt);
            }
        });
        btnproduct_exit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnproduct_exitKeyPressed(evt);
            }
        });

        cmbcategory_id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Select Product Id --" }));

        jLabel10.setText("Supplier ID");
        jLabel10.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel10.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel10.setPreferredSize(new java.awt.Dimension(75, 14));

        cmbspplier_id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Supplier Id --" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(lblproductid, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnproduct_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnproduct_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnproduct_save, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cmbspplier_id, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblproduct_currentprice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtproduct_currentprice)
                            .addComponent(txtproduct_name)
                            .addComponent(lblproduct_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnproduct_update, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtproduct_gst, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                            .addComponent(lblproduct_billno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtproduct_billno)
                                            .addComponent(lblproduct_quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtproduct_quantity))
                                        .addComponent(txtproduct_costprice, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblproduct_costprice, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbcategory_id, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtproduct_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtproduct_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblproduct_name, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblproduct_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtproduct_billno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblproduct_billno, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtproduct_gst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtproduct_currentprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtproduct_costprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblproduct_currentprice, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblproduct_costprice, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbspplier_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbcategory_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnproduct_save)
                    .addComponent(btnproduct_clear)
                    .addComponent(btnproduct_update))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnproduct_exit)
                    .addComponent(lblproductid, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel12.setText("Item List");
        jLabel12.setMaximumSize(new java.awt.Dimension(75, 14));
        jLabel12.setMinimumSize(new java.awt.Dimension(75, 14));
        jLabel12.setPreferredSize(new java.awt.Dimension(75, 14));

        itemtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        itemtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemtableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(itemtable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //COST PRICE
    private void txtproduct_costpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproduct_costpriceActionPerformed
        
        String PATTERN = "^[0-9]{0,10}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtproduct_costprice.getText());
        if(!match.matches())
        {
            lblproduct_costprice.setText("Price is Incorrect");
        }
        else
        {
            lblproduct_costprice.setText("");
        }
    }//GEN-LAST:event_txtproduct_costpriceActionPerformed

    //PRODUCT NAME
    private void txtproduct_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproduct_nameActionPerformed
        
        String PATTERN = "^[A-Za-z]{0,50}[ A-Za-z]{0,50}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtproduct_name.getText());
        if(!match.matches())
        {
            lblproduct_name.setText("Name is Incorrect");
        }
        else
        {
            lblproduct_name.setText("");
        }
    }//GEN-LAST:event_txtproduct_nameActionPerformed

    //CURRENT PRICE
    private void txtproduct_currentpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproduct_currentpriceActionPerformed
        
        String PATTERN = "^[0-9]{0,10}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtproduct_currentprice.getText());
        if(!match.matches())
        {
            lblproduct_currentprice.setText("Price is Incorrect");
        }
        else
        {
            lblproduct_currentprice.setText("");
        }
    }//GEN-LAST:event_txtproduct_currentpriceActionPerformed

    //QUANTITY
    private void txtproduct_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproduct_quantityActionPerformed
        
        String PATTERN = "^[0-9]{0,100}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtproduct_quantity.getText());
        if(!match.matches())
        {
            lblproduct_quantity.setText("Price is Incorrect");
        }
        else
        {
            lblproduct_quantity.setText("");
        }
    }//GEN-LAST:event_txtproduct_quantityActionPerformed

    private void txtproduct_billnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproduct_billnoActionPerformed
                
    }//GEN-LAST:event_txtproduct_billnoActionPerformed

    //clear
    private void btnproduct_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnproduct_clearActionPerformed
        clear();
    }//GEN-LAST:event_btnproduct_clearActionPerformed

    //exit
    private void btnproduct_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnproduct_exitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnproduct_exitActionPerformed

    //save
    private void btnproduct_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnproduct_saveActionPerformed
        save();
    }//GEN-LAST:event_btnproduct_saveActionPerformed

    private void itemtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemtableMouseClicked
        
        try
        {
            btnproduct_save.setEnabled(false);
            btnproduct_update.setEnabled(true);
           
            int r= itemtable.getSelectedRow();
            int c=itemtable.getSelectedColumn();
            Object s=itemtable.getValueAt(r, 0);
            String NameVal = s.toString();
            
            ResultSet rs = st.executeQuery("select * from Product where Product_Name='"+NameVal+"'");
            rs.next();
            
            lblproductid.setText(""+rs.getInt("Product_ID"));
            txtproduct_name.setText(""+rs.getString("Product_Name"));
            txtproduct_description.setText(""+rs.getString("Description"));
            
            txtproduct_currentprice.setText(""+rs.getString("Current_Price"));
            txtproduct_costprice.setText(""+rs.getString("Cost_Price"));
            txtproduct_quantity.setText(""+rs.getString("Quantity"));
            txtproduct_billno.setText(""+rs.getString("Bill_No"));
            txtproduct_gst.setText(""+rs.getString("GST"));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_itemtableMouseClicked
    
    //update
    private void btnproduct_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnproduct_updateActionPerformed
        update();
    }//GEN-LAST:event_btnproduct_updateActionPerformed

    private void btnproduct_saveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnproduct_saveKeyPressed
        save();
    }//GEN-LAST:event_btnproduct_saveKeyPressed

    private void btnproduct_updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnproduct_updateKeyPressed
        update();
    }//GEN-LAST:event_btnproduct_updateKeyPressed

    private void btnproduct_clearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnproduct_clearKeyPressed
        clear();
    }//GEN-LAST:event_btnproduct_clearKeyPressed

    private void btnproduct_exitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnproduct_exitKeyPressed
        this.dispose();
    }//GEN-LAST:event_btnproduct_exitKeyPressed

    private void save()
    {
        try
        {
            prodname = txtproduct_name.getText();
            description = txtproduct_description.getText();
            categoryid = cmbcategory_id.getSelectedItem().toString();
            supplierid = cmbspplier_id.getSelectedItem().toString();
            qty = txtproduct_quantity.getText();
            billno = txtproduct_billno.getText();
            gst = txtproduct_gst.getText();
            currentprice = txtproduct_currentprice.getText();
            costprice = txtproduct_costprice.getText();
            
            if(prodname.isEmpty()||description.isEmpty()||categoryid.isEmpty()||qty.isEmpty()||billno.isEmpty()||gst.isEmpty()||currentprice.isEmpty()||costprice.isEmpty())
            {
                JOptionPane.showMessageDialog(null,"Please Enter above fild");
            }
            else if(!prodname.isEmpty() && !description.isEmpty() && !categoryid.isEmpty() && !qty.isEmpty() && !billno.isEmpty() && !gst.isEmpty() && !currentprice.isEmpty() && !costprice.isEmpty())
            {
                conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
                
                pst = conn.prepareStatement("INSERT into Product(Product_Name,Description,Category_ID,Current_Price,Cost_Price,Quantity,Bill_No,Supplier_Id,GST,Created_Date_Time,Updated_Date_Time) VALUES(?,?,?,?,?,?,?,?,?,?,?)");
                
                pst.setString(1, prodname);                
                pst.setString(2, description);                
                pst.setString(3, categoryid);
                pst.setString(4, currentprice);
                pst.setString(5, costprice);
                pst.setString(6, qty);
                pst.setString(7, billno);
                pst.setString(8, supplierid);
                pst.setString(9, gst);
                pst.setDate(10,new Date(cal.getTimeInMillis()));
                pst.setDate(11,new Date(cal.getTimeInMillis()));
                pst.executeUpdate();
                
                conn.commit();
                conn.close();
                
                JOptionPane.showMessageDialog(null,"Successfully Inserted");
                
                initJtable();
                
                txtproduct_billno.setText("");
                txtproduct_costprice.setText("");
                txtproduct_currentprice.setText("");
                txtproduct_description.setText("");
                txtproduct_gst.setText("");
                txtproduct_name.setText("");
                txtproduct_quantity.setText("");
                
                try
            {
                conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
        
                 ResultSet rs = st.executeQuery("select max(Bill_No) from Product");
                rs.next();
        
                if(rs!=null)
                {
                    i_no = rs.getInt(1);
                    i_no++;
                }
                 else
                {
                     i_no = 1;
                }
        
                txtproduct_billno.setText(""+i_no);
                txtproduct_billno.setEditable(false);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void update()
    {
         try
        {
            
            int id = Integer.parseInt(lblproductid.getText());
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            pst = conn.prepareStatement("UPDATE Product SET Product_Name = ?, Description = ?, Category_ID = ?, Current_Price = ?, Cost_Price = ?, Quantity = ?, Bill_No = ?, Supplier_Id = ?, GST = ?,Updated_Date_Time = ? where Supplier_ID = "+id+" ");
           
            pst.setString(1, txtproduct_name.getText());                
            pst.setString(2, txtproduct_description.getText());                
            pst.setString(3, cmbcategory_id.toString());
            pst.setString(4, txtproduct_currentprice.getText());
            pst.setString(5, txtproduct_costprice.getText());
            pst.setString(6, txtproduct_quantity.getText());
            pst.setString(7, txtproduct_billno.getText());
            pst.setString(8, cmbspplier_id.toString());
            pst.setString(9, txtproduct_gst.getText());
            pst.setDate(10, new Date(cal.getTimeInMillis()));
                
            
            pst.executeUpdate();
            
            initJtable();
            
            txtproduct_billno.setText("");
            txtproduct_costprice.setText("");
            txtproduct_currentprice.setText("");
            txtproduct_description.setText("");
            txtproduct_gst.setText("");
            txtproduct_name.setText("");
            txtproduct_quantity.setText("");
            btnproduct_save.setEnabled(true);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void clear()
    {
        txtproduct_billno.setText("");
        txtproduct_costprice.setText("");
        txtproduct_currentprice.setText("");
        txtproduct_description.setText("");
        txtproduct_gst.setText("");
        txtproduct_name.setText("");
        txtproduct_quantity.setText("");
    }
    
    public void initJtable()
    {
        try
        {
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            st = conn.createStatement();
            
            header = new Vector<String>();
            header.add("Product Name");
            header.add("Description ");
            header.add("Category ID");
            header.add("Current Price");
            header.add("Cost Price");
            header.add("Quantity");
            header.add("Bill No.");
            header.add("Supplier Id");
            header.add("GST");
            
            ResultSet rs = st.executeQuery("SELECT * FROM Product ORDER BY Product_Name");
            data = new Vector<Vector<String>>();
            while(rs.next())
            {
                Vector<String> custVet = new Vector<String>();
                custVet.add(rs.getString("Product_Name"));
                custVet.add(rs.getString("Description"));
                custVet.add(rs.getString("Category_ID"));
                custVet.add(rs.getString("Current_Price"));
                custVet.add(rs.getString("Cost_Price"));
                custVet.add(rs.getString("Quantity"));
                custVet.add(rs.getString("Bill_No"));
                custVet.add(rs.getString("Supplier_Id"));
                custVet.add(rs.getString("GST"));
                data.add(custVet);
            }
           DefaultTableModel dtm = new DefaultTableModel(data,header);
           itemtable.setModel(dtm);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    
    private void ComboSupplierID()
    {
        try
        {
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            st = conn.createStatement();
            ResultSet rst= st.executeQuery("SELECT * FROM Supplier ORDER BY Supplier_ID");
            while(rst.next())
            {
                cmbspplier_id.addItem(""+rst.getString("Supplier_ID"));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private void ComboCategoryID()
    {
        try
        {
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            st = conn.createStatement();
            ResultSet rst= st.executeQuery("SELECT * FROM Category ORDER BY Category_ID");
            while(rst.next())
            {
                cmbcategory_id.addItem(""+rst.getString("Category_ID"));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnproduct_clear;
    private javax.swing.JButton btnproduct_exit;
    private javax.swing.JButton btnproduct_save;
    private javax.swing.JButton btnproduct_update;
    private javax.swing.JComboBox cmbcategory_id;
    private javax.swing.JComboBox cmbspplier_id;
    private javax.swing.JTable itemtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblproduct_billno;
    private javax.swing.JLabel lblproduct_costprice;
    private javax.swing.JLabel lblproduct_currentprice;
    private javax.swing.JLabel lblproduct_name;
    private javax.swing.JLabel lblproduct_quantity;
    private javax.swing.JLabel lblproductid;
    private javax.swing.JTextField txtproduct_billno;
    private javax.swing.JTextField txtproduct_costprice;
    private javax.swing.JTextField txtproduct_currentprice;
    private javax.swing.JTextArea txtproduct_description;
    private javax.swing.JTextField txtproduct_gst;
    private javax.swing.JTextField txtproduct_name;
    private javax.swing.JTextField txtproduct_quantity;
    // End of variables declaration//GEN-END:variables
}
