package ibms;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mihir Zalavadiya
 */
public class AddCategory extends javax.swing.JFrame {

    /**
     * Creates new form AddCategory
     */
    
    Connection conn=null;
    PreparedStatement pst=null;
    String category_name,category_description;
    Statement st;
    private Vector<Vector<String>> data;
    private Vector<String> header;
    public static final String DATE_FORMAT_NOW = "yyyy-MM-dd HH:mm:ss";
    Calendar cal; 
    
    public AddCategory() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(AddCategory.DISPOSE_ON_CLOSE);
        setVisible(true);
        cal = Calendar.getInstance();
        
        initJtable();
        
        lblcaid.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        lblcategoryname = new javax.swing.JLabel();
        btncategory_save = new javax.swing.JButton();
        btncategory_update = new javax.swing.JButton();
        btncategory_clear = new javax.swing.JButton();
        btncategory_exit = new javax.swing.JButton();
        txtcategory_name = new javax.swing.JTextField();
        lblcaid = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtcategory_description = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Category Name");

        jLabel2.setText("Description");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jLabel3.setText("Category List");

        lblcategoryname.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblcategoryname.setForeground(new java.awt.Color(255, 0, 0));

        btncategory_save.setText("Save");
        btncategory_save.setMaximumSize(new java.awt.Dimension(67, 23));
        btncategory_save.setMinimumSize(new java.awt.Dimension(67, 23));
        btncategory_save.setPreferredSize(new java.awt.Dimension(67, 23));
        btncategory_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncategory_saveActionPerformed(evt);
            }
        });
        btncategory_save.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btncategory_saveKeyPressed(evt);
            }
        });

        btncategory_update.setText("Update");
        btncategory_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncategory_updateActionPerformed(evt);
            }
        });
        btncategory_update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btncategory_updateKeyPressed(evt);
            }
        });

        btncategory_clear.setText("Clear");
        btncategory_clear.setMaximumSize(new java.awt.Dimension(67, 23));
        btncategory_clear.setMinimumSize(new java.awt.Dimension(67, 23));
        btncategory_clear.setPreferredSize(new java.awt.Dimension(67, 23));
        btncategory_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncategory_clearActionPerformed(evt);
            }
        });
        btncategory_clear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btncategory_clearKeyPressed(evt);
            }
        });

        btncategory_exit.setText("Exit");
        btncategory_exit.setMaximumSize(new java.awt.Dimension(67, 23));
        btncategory_exit.setMinimumSize(new java.awt.Dimension(67, 23));
        btncategory_exit.setPreferredSize(new java.awt.Dimension(67, 23));
        btncategory_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncategory_exitActionPerformed(evt);
            }
        });
        btncategory_exit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btncategory_exitKeyPressed(evt);
            }
        });

        txtcategory_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcategory_nameKeyReleased(evt);
            }
        });

        lblcaid.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N

        txtcategory_description.setColumns(20);
        txtcategory_description.setRows(5);
        jScrollPane2.setViewportView(txtcategory_description);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblcaid, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btncategory_save, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btncategory_clear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btncategory_exit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btncategory_update, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(53, 53, 53))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(lblcategoryname, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                            .addComponent(txtcategory_name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtcategory_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblcategoryname, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btncategory_save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btncategory_update))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btncategory_clear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btncategory_exit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblcaid, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                        .addGap(8, 8, 8))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //save
    private void btncategory_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncategory_saveActionPerformed
        save();
    }//GEN-LAST:event_btncategory_saveActionPerformed

    //clear
    private void btncategory_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncategory_clearActionPerformed
        txtcategory_description.setText("");
        txtcategory_name.setText("");
    }//GEN-LAST:event_btncategory_clearActionPerformed

    //exit
    private void btncategory_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncategory_exitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btncategory_exitActionPerformed

    private void txtcategory_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcategory_nameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[A-Za-z]{0,50}[ A-Za-z]{0,50}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtcategory_name.getText());
        if(!match.matches())
        {
            lblcategoryname.setText("Name is Incorrect");
        }
        else
        {
            lblcategoryname.setText("");
        }
    }//GEN-LAST:event_txtcategory_nameKeyReleased

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        
        try
        {
            btncategory_save.setEnabled(false);
            btncategory_update.setEnabled(true);
           
            int r= jTable2.getSelectedRow();
            int c=jTable2.getSelectedColumn();
            Object s=jTable2.getValueAt(r, 0);
            String NameVal = s.toString();
            ResultSet rs = st.executeQuery("select * from Category where Category_Name='"+NameVal+"'");
            rs.next();
            lblcaid.setText(""+rs.getInt("Category_ID"));
            txtcategory_name.setText(""+rs.getString("Category_Name"));
            txtcategory_description.setText(""+rs.getString("Description"));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    //update
    private void btncategory_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncategory_updateActionPerformed
        update();
    }//GEN-LAST:event_btncategory_updateActionPerformed

    private void btncategory_saveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btncategory_saveKeyPressed
        save();
    }//GEN-LAST:event_btncategory_saveKeyPressed

    private void btncategory_updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btncategory_updateKeyPressed
        update();
    }//GEN-LAST:event_btncategory_updateKeyPressed

    private void btncategory_clearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btncategory_clearKeyPressed
        txtcategory_description.setText("");
        txtcategory_name.setText("");
    }//GEN-LAST:event_btncategory_clearKeyPressed

    private void btncategory_exitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btncategory_exitKeyPressed
        this.dispose();
    }//GEN-LAST:event_btncategory_exitKeyPressed

    private void save()
    {
        try
        {
           category_name = txtcategory_name.getText();
           category_description = txtcategory_description.getText();
           
           if(category_name.isEmpty()||category_description.isEmpty())
           {
                JOptionPane.showMessageDialog(null,"Please Enter above fild");
           }
           else if(!category_name.isEmpty() && !category_description.isEmpty())
           {
               conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
               
               pst = conn.prepareStatement("INSERT into Category(Category_Name,Description,Created_Date_Time,Updated_Date_Time) VALUES(?,?,?,?)");
               pst.setString(1, category_name);
               pst.setString(2, category_description);
               pst.setDate(3,new Date(cal.getTimeInMillis()));
               pst.setDate(4,new Date(cal.getTimeInMillis()));

               pst.executeUpdate();
               conn.commit();
               conn.close();
               JOptionPane.showMessageDialog(null,"Successfully Inserted");
               
               initJtable();
               
               txtcategory_name.setText("");
               txtcategory_description.setText("");
           }
                
        }
        catch(Exception e)
        {
            Logger.getLogger(AddCustomer.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void update()
    {
        try 
        {   
            int id = Integer.parseInt(lblcaid.getText());
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            pst = conn.prepareStatement("UPDATE Category SET Category_Name = ?, Description = ?,Updated_Date_Time = ? where Category_ID = "+id+" ");
            pst.setString(1, txtcategory_name.getText());
            pst.setString(2, txtcategory_description.getText());
            pst.setDate(3,new Date(cal.getTimeInMillis()));
            pst.executeUpdate();
            
            //conn.close();
            
            initJtable();
            
            txtcategory_name.setText("");
            txtcategory_description.setText("");
            btncategory_save.setEnabled(true);
            
            //btnupdate.setEnabled(false);
            
            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(AddCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void initJtable()
    {
        try
        {
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            st = conn.createStatement();
            
            header = new Vector<String>();
            header.add("Category Name");
            header.add("Description");
            
            ResultSet rs = st.executeQuery("SELECT * FROM Category ORDER BY Category_Name");
            data = new Vector<Vector<String>>();
            while(rs.next())
            {
                Vector<String> custVet = new Vector<String>();
                custVet.add(rs.getString("Category_Name"));
                custVet.add(rs.getString("Description"));
                data.add(custVet);
            }
           DefaultTableModel dtm = new DefaultTableModel(data,header);
           jTable2.setModel(dtm);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCategory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncategory_clear;
    private javax.swing.JButton btncategory_exit;
    private javax.swing.JButton btncategory_save;
    private javax.swing.JButton btncategory_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblcaid;
    private javax.swing.JLabel lblcategoryname;
    private javax.swing.JTextArea txtcategory_description;
    private javax.swing.JTextField txtcategory_name;
    // End of variables declaration//GEN-END:variables
}
