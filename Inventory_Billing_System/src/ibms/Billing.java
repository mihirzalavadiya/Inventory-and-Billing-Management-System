/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ibms;

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Mihir Zalavadiya
 */
public class Billing extends javax.swing.JFrame {

    /**
     * Creates new form Billing
     */
    Connection conn = null;
    Statement st;
    int i_no = 0;
    public static final String DATE_FORMAT_NOW = "yyyy-MM-dd";
    Calendar cal; 
    int subtotal = 0;
    PreparedStatement pst=null;
    private Vector<String> header = new Vector<String>();
    private Vector<Vector<String>> data = new Vector<Vector<String>>();
    Vector<Category> categoryList = new Vector<Category>();
    Vector<Product> productList = new Vector<Product>();
    Vector<Customer> customerList = new Vector<Customer>();
    Vector<String> custProduct = new Vector<String>();
    Vector<BillingItem> billingItems = new Vector<BillingItem>();
    Vector<String> rowOne;
    Vector<Invoice> invoicelist = new Vector<Invoice>();
    public Billing() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        setDefaultCloseOperation(Billing.DISPOSE_ON_CLOSE);
        cal = Calendar.getInstance();
        
        String inActiveDate = null;
        SimpleDateFormat format1 = new SimpleDateFormat(DATE_FORMAT_NOW);
        try {
            inActiveDate = format1.format(cal.getTime());
            txt_billing_billdate.setText(inActiveDate);
            
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        ComboCategoryName();
        ComboBoxName();
        billno();
        
        txt_billing_billdate.setEditable(false);
        
        txt_billing_stock.setEnabled(false);
        txt_billing_price.setEditable(false);
        //txt_billing_total.setEditable(false);
        txt_billing_subtotal.setEditable(false);
        
        
            //header.add("Bill Date");
            header.add("Category Name");
            header.add("Product Name");
            header.add("Note");
            header.add("Quantity");
            header.add("Price");
            header.add("Total");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is alwaysi
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_billno_billing = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_billing_billdate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmb_billing_customername = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_billing_note = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_billing_quantity = new javax.swing.JTextField();
        btn_billing_add = new javax.swing.JButton();
        cmb_billing_productname = new javax.swing.JComboBox();
        cmb_billing_category = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_billing_price = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_billing_stock = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_billing = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btn_billing_remove = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txt_billing_subtotal = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btn_billing_save = new javax.swing.JButton();
        btn_billing_exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Bill No.");

        txt_billno_billing.setBackground(new java.awt.Color(166, 229, 219));
        txt_billno_billing.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        jLabel2.setText("Generate Invoice");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Bill Date");

        txt_billing_billdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Customer Name");

        cmb_billing_customername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmb_billing_customername.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--- SELECT CUSTOMER ---" }));
        cmb_billing_customername.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBackground(new java.awt.Color(124, 124, 244));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Product Name");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Note");

        txt_billing_note.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Quantity");

        txt_billing_quantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btn_billing_add.setBackground(new java.awt.Color(240, 111, 5));
        btn_billing_add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_billing_add.setText("ADD");
        btn_billing_add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_billing_addMouseClicked(evt);
            }
        });
        btn_billing_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_billing_addActionPerformed(evt);
            }
        });

        cmb_billing_productname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmb_billing_productname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT PRODUCT" }));
        cmb_billing_productname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_billing_productnameItemStateChanged(evt);
            }
        });

        cmb_billing_category.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmb_billing_category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT CATEGORY" }));
        cmb_billing_category.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_billing_categoryItemStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Category Name");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Price");

        txt_billing_price.setBackground(new java.awt.Color(153, 255, 255));
        txt_billing_price.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Stock");

        txt_billing_stock.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmb_billing_category, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cmb_billing_productname, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_billing_note, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_billing_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_billing_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(txt_billing_price, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_billing_add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmb_billing_category, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_billing_add)
                        .addComponent(txt_billing_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_billing_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_billing_stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_billing_note, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmb_billing_productname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        table_billing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table_billing);

        jPanel3.setBackground(new java.awt.Color(124, 124, 245));

        btn_billing_remove.setBackground(new java.awt.Color(240, 111, 5));
        btn_billing_remove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_billing_remove.setText("REMOVE");
        btn_billing_remove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_billing_removeMouseClicked(evt);
            }
        });
        btn_billing_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_billing_removeActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Sub Total");

        txt_billing_subtotal.setBackground(new java.awt.Color(255, 135, 205));
        txt_billing_subtotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_billing_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(txt_billing_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_billing_remove)
                    .addComponent(jLabel10)
                    .addComponent(txt_billing_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_billing_save.setBackground(new java.awt.Color(240, 111, 5));
        btn_billing_save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_billing_save.setText("SAVE");
        btn_billing_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_billing_saveActionPerformed(evt);
            }
        });

        btn_billing_exit.setBackground(new java.awt.Color(240, 111, 5));
        btn_billing_exit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_billing_exit.setText("EXIT");
        btn_billing_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_billing_exitMouseClicked(evt);
            }
        });
        btn_billing_exit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_billing_exitKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_billing_save, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btn_billing_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_billing_exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_billing_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(456, 456, 456))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txt_billno_billing, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txt_billing_billdate, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(cmb_billing_customername, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_billno_billing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_billing_billdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cmb_billing_customername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_billing_addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_billing_addMouseClicked
        initJtable();
        //Save();
       //cmb_billing_productname.setSelectedIndex(0);
        txt_billing_note.setText("");
        txt_billing_price.setText("");
        txt_billing_stock.setText("");
        txt_billing_quantity.setText("");
        //cmb_billing_category.setSelectedItem("SELECT CATEGORY");
    }//GEN-LAST:event_btn_billing_addMouseClicked

    //save
    private void btn_billing_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_billing_addActionPerformed
                //initJtable();
    }//GEN-LAST:event_btn_billing_addActionPerformed

    private void cmb_billing_categoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_billing_categoryItemStateChanged
        
        
        try
        {
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            st = conn.createStatement();
            
            if(evt.getStateChange() == ItemEvent.SELECTED){
                Category data = (Category)evt.getItem();
                System.out.println("Selected Item = "+data.getId()+"     "+data.getName());
                
                ResultSet rst= st.executeQuery("SELECT * FROM Product where Category_ID = "+data.getId());
                productList.clear();
                cmb_billing_productname.removeAllItems();
                while(rst.next())
                {
                    productList.add(new Product(rst.getInt("Product_ID"),rst.getString("Product_Name"),rst.getInt("Quantity"),rst.getInt("Current_Price")));

                }
                for(Product pro: productList){
                    cmb_billing_productname.addItem(pro);    
                }
            } 
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmb_billing_categoryItemStateChanged

    
    private void cmb_billing_productnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_billing_productnameItemStateChanged

        try
        {
            if(evt.getStateChange() == ItemEvent.SELECTED)
            {
                Product data = (Product)evt.getItem();
                txt_billing_stock.setText(String.valueOf(data.getQuantity()));
                txt_billing_price.setText(String.valueOf(data.getPrice()));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmb_billing_productnameItemStateChanged

    private void btn_billing_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_billing_saveActionPerformed
        // TODO add your handling code here:
        Save();
        //txt_billing_total.setText(String.valueOf((Integer.parseInt(txt_billing_quantity.getText().toString()))*(Integer.parseInt(txt_billing_price.getText().toString()))));
//        JOptionPane.showMessageDialog(null,"Inserted");
//        
//        int response = JOptionPane.showConfirmDialog(null, "Bill Generated! \n Do you want to Print Bill?", "Confirm",
//            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
//            if (response == JOptionPane.NO_OPTION) {
//              
//            }
//            else if(response == JOptionPane.YES_OPTION)
//            {
//                try
//                {
//                    String dir = System.getProperty("user.dir");
//                    File f = new File(dir+"/src/ibms/Printbill.jrxml");
//                    
//                    conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
//                    st = conn.createStatement();
//                
//                    JasperReport JASP_REP2= JasperCompileManager.compileReport(JRXmlLoader.load(f));
//                    JASP_REP2.setProperty("net.sf.jasperreports.xpath.executer.factory"
//                        ,"net.sf.jasperreports.engine.util.xml.JaxenXPathExecuterFactory");
//                    
//                    String query = "SELECT Product.Product_Name AS Product_Name,"
//                            + " Order_Item.Quantity AS Quantity,"
//                            + " Order_Item.Price AS Price,"
//                            + " Order_Item.Sub_Total AS TOTAL\n" +
//"FROM Order_Item INNER JOIN Product ON Order_Item.Product_ID = Product.Product_ID\n" +
//"WHERE (((Order_Item.Invoice_Number)=1029))";
//                    
//                    ResultSet rs = st.executeQuery(query);
//                    JRResultSetDataSource  jrSource = new JRResultSetDataSource(rs);
//                    Map param = new HashMap();
//                    //param.put("id",billid);
//                    //param.put("digit",new NumbertoWord().convert(Integer.parseInt(strSubTotal)));
//                    JasperPrint JASP_PRINT=JasperFillManager.fillReport(JASP_REP2, param,jrSource);
//                    JasperViewer.viewReport(JASP_PRINT,false);
//                }
//                catch(Exception e)
//                {
//                    e.printStackTrace();
//                }
//                
//            }
    }//GEN-LAST:event_btn_billing_saveActionPerformed

    private void btn_billing_removeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_billing_removeMouseClicked
        remove();
    }//GEN-LAST:event_btn_billing_removeMouseClicked

    private void btn_billing_exitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_billing_exitKeyPressed
        this.dispose();
    }//GEN-LAST:event_btn_billing_exitKeyPressed

    private void btn_billing_exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_billing_exitMouseClicked
        this.dispose(); 
    }//GEN-LAST:event_btn_billing_exitMouseClicked

    private void btn_billing_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_billing_removeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_billing_removeActionPerformed

    
    //Bill No. Generate
    private void billno()
    {
        try
        {
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            st = conn.createStatement();
            ResultSet rs = st.executeQuery("select * from Invoice ORDER BY Invoice_Number desc limit 1");
                        
            if(rs.next())
            {
                i_no = rs.getInt("Invoice_Number");
                i_no++;
            }
            else
            {
                i_no = 1001;
            }
        
            txt_billno_billing.setText(""+i_no);
            txt_billno_billing.setEditable(false);
        }
        catch(SQLException | HeadlessException e)
        {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE,null,e);
        }
    }
    
     private void ComboCategoryName()
    {
        try
        {
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            st = conn.createStatement();
            //ResultSet rst= st.executeQuery("SELECT * FROM Category ORDER BY Category_Name");
            
            ResultSet rst= st.executeQuery("SELECT * from Category");// INNER JOIN Product ON Category.Category_ID = Product.Category_ID");
            while(rst.next())
            {
                categoryList.addElement( new Category(rst.getInt("Category_ID"),rst.getString("Category_Name")));
            }            
            for(Category cat: categoryList){
                cmb_billing_category.addItem(cat);    
            }
            txt_billing_quantity.setText("1");
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
     
    private void ComboBoxName()
    {
        try
        {
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            st = conn.createStatement();
            ResultSet rst= st.executeQuery("SELECT * FROM Customer ORDER BY Customer_Name");
            customerList.clear();
            cmb_billing_customername.removeAllItems();
            while(rst.next())
            {
                customerList.addElement(new Customer(rst.getInt("Customer_ID"), rst.getString("Customer_Name")));
            }
            for(Customer data: customerList){
                cmb_billing_customername.addItem(data);    
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private void initJtable()
    {
        try
        {
            Category  cat = (Category)cmb_billing_category.getSelectedItem();
            Product  pro = (Product)cmb_billing_productname.getSelectedItem();
            
            int quantity = Integer.valueOf(txt_billing_quantity.getText().toString());
            int total = quantity * pro.getPrice();
            
            BillingItem item = new BillingItem(cat.getId(),pro.getId(),cat.getName(),pro.getProductname(),txt_billing_note.getText(),quantity,pro.getPrice(),total);
            
            rowOne = new Vector<String>();
            rowOne.addElement(item.getCategoryName());
            rowOne.addElement(item.getProductName());
            rowOne.addElement(item.getNote());
            rowOne.addElement(String.valueOf(item.getQuantity()));
            rowOne.addElement(String.valueOf(item.getPrice()));
            rowOne.addElement(String.valueOf(item.getTotal()));
            rowOne.addElement(String.valueOf(item.getOrderItemId()));
            
            data.addElement(rowOne);
            
            billingItems.addElement(item);
            
            DefaultTableModel dtm = new DefaultTableModel(data,header);
            table_billing.setModel(dtm);
            
            subtotal += item.getTotal();
            //JOptionPane.showMessageDialog(null, subtotal);
            txt_billing_subtotal.setText(String.valueOf(subtotal));
            
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private void remove()
    {
//        DefaultTableModel model = (DefaultTableModel) this.table_billing.getModel();
        int row = table_billing.getSelectedRow();
//        int[] column = table_billing.getSelectedColumns();
//        String selectdata= null;
//        for(int i =0 ;i<column.length;i++)
//        {
//            selectdata = (String.valueOf( table_billing.getValueAt(row, column[i])));
//        }
//        selectdata = (String.valueOf( model.getValueAt(row,5)));
//        model.removeRow(row);
//        subtotal -= Integer.valueOf(selectdata);
//        txt_billing_subtotal.setText(String.valueOf(subtotal));      

        data.remove(row);
        billingItems.remove(row);
        DefaultTableModel dtm = new DefaultTableModel(data,header);
        table_billing.setModel(dtm);
        
        long total = 0;
        for(BillingItem item: billingItems){
            total += item.getTotal();
        }
        //subtotal -= Integer.valueOf(String.valueOf(table_billing.getValueAt(row, row)));
        txt_billing_subtotal.setText(String.valueOf(total));


        
//        Customer customer = (Customer)cmb_billing_customername.getSelectedItem();
//        //JOptionPane.showMessageDialog(null, customer.getId() +"    "+ customer.getName());
//        
//        Category category = (Category)cmb_billing_category.getSelectedItem();
//       // JOptionPane.showMessageDialog(null, category.getId() +"    "+ category.getName());
//        
//        Product  product = (Product)cmb_billing_productname.getSelectedItem();
//        //JOptionPane.showMessageDialog(null, product.getId() +"    "+ product.getProductname()+" "+product.getPrice());
//        
//        selectdata = (String.valueOf(model.getValueAt(row, 1)));
//        //JOptionPane.showMessageDialog(null,txt_billno_billing.getText());
//            //JOptionPane.showMessageDialog(null,selectdata);
//        
//        
//        try
//        {
//            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
//            String value = String.valueOf(model.getValueAt(row,2));
//            JOptionPane.showMessageDialog(null,value);
////            ResultSet rst= st.executeQuery("SELECT Product_ID FROM Product WHERE Product_Name = "+value);
//            pst = conn.prepareStatement("DELETE FROM Order_Item WHERE Invoice_Number = ? and Product_ID = ?");
//            pst.setString(1,txt_billno_billing.getText());
//            //pst.setInt(2,rst.getInt("Product_ID"));
//            pst.executeUpdate();
//            conn.commit();
//            conn.close();
//        }
//        catch(Exception e)
//        {
//            e.printStackTrace();
//        }
    }
    
    private void Save()
    {
        Customer customer = (Customer)cmb_billing_customername.getSelectedItem();
        //JOptionPane.showMessageDialog(null, customer.getId() +"    "+ customer.getName());
        
        Category category = (Category)cmb_billing_category.getSelectedItem();
       // JOptionPane.showMessageDialog(null, category.getId() +"    "+ category.getName());
        
        Product  product = (Product)cmb_billing_productname.getSelectedItem();
        //JOptionPane.showMessageDialog(null, product.getId() +"    "+ product.getProductname()+" "+product.getPrice());
        
        
        String Date,Note;
        Date = txt_billing_billdate.getText().toString();
        Note = txt_billing_note.getText().toString();
        int Billno = Integer.valueOf( txt_billno_billing.getText().toString());
        //int qty = Integer.valueOf( txt_billing_quantity.getText().toString());
        
        //JOptionPane.showMessageDialog(null,Date+" "+Billno+" "+qty);
        
//        for(int i=0;i<rowOne.size();i++)
//        {
//            System.out.println(rowOne.get(i));
//        }
        
//        int total=0;
//        total = qty * Integer.valueOf(txt_billing_price.getText().toString());
        try
        {
             int total = 0;
             for (BillingItem item : billingItems) {
                 total += item.getTotal();
             }
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
            //st = conn.createStatement();
            
            pst = conn.prepareStatement("insert into Invoice (Invoice_Number,"
                    + "Customer_Id,"
                    + "Invoice_Date,"
                    + "Due_Date,"
                    + "Payment_Ref,"
                    + "Description,"
                    + "Tax,"
                    + "Total,"
                    + "Created_Date_Time,"
                    + "Updated_Date_Time) VALUES(?,?,?,?,?,?,?,?,?,?)");
            pst.setString(1,txt_billno_billing.getText());
            pst.setInt(2,customer.getId());
            pst.setDate(3,new Date(cal.getTimeInMillis()));
            pst.setDate(4,new Date(cal.getTimeInMillis()));
            pst.setString(5,"Cash");
            pst.setString(6,"");
            pst.setString(7,"18");
            pst.setString(8,String.valueOf(total));
            pst.setDate(9,new Date(cal.getTimeInMillis()));
            pst.setDate(10,new Date(cal.getTimeInMillis()));
            
            pst.executeUpdate();
            //JOptionPane.showMessageDialog(null,"Inserted");
            conn.commit();
            conn.close();
            
            
            conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
//            st = conn.createStatement();
//            ResultSet rst = st.executeQuery("SELECT * FROM Invoice where Invoice_Id="+txt_billno_billing.getText());
            //invoicelist.addElement(new Invoice(rst.getInt("Invoice_ID"),rst.getString("Description"),rst.getInt("Tax")));
            for (BillingItem item : billingItems) {
                
                pst = conn.prepareStatement("INSERT INTO Order_Item(Product_ID,Invoice_Number,Description,Quantity,Price,Sub_Total,Created_date_Time,Updated_Date_Time) VALUES (?,?,?,?,?,?,?,?)");
                pst.setInt(1,item.getProductID());
                pst.setString(2,txt_billno_billing.getText());
                pst.setString(3,item.getNote());
                pst.setString(4,String.valueOf(item.getQuantity()));
                pst.setString(5,String.valueOf(item.getPrice()));
                pst.setString(6,String.valueOf(item.getTotal()));
                pst.setDate(7,new Date(cal.getTimeInMillis()));
                pst.setDate(8,new Date(cal.getTimeInMillis()));

                pst.executeUpdate();
            }
            
            
            //JOptionPane.showMessageDialog(null,"inserted");
            conn.commit();
            conn.close();
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
        JOptionPane.showMessageDialog(null,"Inserted");
        
        int response = JOptionPane.showConfirmDialog(null, "Bill Generated! \n Do you want to Print Bill?", "Confirm",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.NO_OPTION) {
              this.dispose();
            }
            else if(response == JOptionPane.YES_OPTION)
            {
                try
                {
                    String dir = System.getProperty("user.dir");
                    File f = new File(dir+"/src/ibms/Printbill.jrxml");
                    
                    conn = DriverManager.getConnection("jdbc:ucanaccess://G:\\Mydb.accdb");
                    st = conn.createStatement();
                
                    JasperReport JASP_REP2= JasperCompileManager.compileReport(JRXmlLoader.load(f));
                    JASP_REP2.setProperty("net.sf.jasperreports.xpath.executer.factory"
                        ,"net.sf.jasperreports.engine.util.xml.JaxenXPathExecuterFactory");
                    
                    String query = "SELECT Product.Product_Name AS Product_Name,Product.Description AS Details, Order_Item.Quantity AS Quantity,Order_Item.Price AS Price,Order_Item.Sub_Total AS Amount FROM Order_Item, Product WHERE Order_Item.Product_ID = Product.Product_ID AND Order_Item.Invoice_Number=?";
                    
                    pst = conn.prepareStatement(query);
                    pst.setInt(1, Integer.parseInt(txt_billno_billing.getText()));
                    ResultSet rs = pst.executeQuery();
                    
                    String name_query = "SELECT Invoice.Invoice_Number AS Invoice_Number, "
                            + "Invoice.Invoice_Date AS Invoice_Date, "
                            + "Invoice.Total AS Total, "
                            + "Customer.Customer_Name AS Name, "
                            + "Customer.Mobile_No AS Mobile_No, "
                            + "Customer.Address AS Address, " 
                            + "Customer.Email AS Email "+
"FROM Customer,Invoice where Customer.Customer_ID = Invoice.Customer_ID" +
" AND(((Invoice.Invoice_Number)=?));";
                    
                    pst = conn.prepareStatement(name_query);
                    pst.setInt(1,Integer.parseInt(txt_billno_billing.getText()));
                    ResultSet rs2 = pst.executeQuery();
                    rs2.next();
                    
                    
                    
                    JRResultSetDataSource  jrSource = new JRResultSetDataSource(rs);
                    
                    System.out.println(rs2.getInt(1));
                    System.out.println(rs2.getString(2));
                    System.out.println(rs2.getInt(3));
                    System.out.println(rs2.getString(4));
                    System.out.println(rs2.getString(5));
                    System.out.println(rs2.getString(6));
                    Map param = new HashMap();
                    param.put("BILL_NO", String.valueOf(rs2.getInt(1)));
                    param.put("Bill_date", rs2.getString(2));
                    param.put("TOTAL", String.valueOf(rs2.getInt(3)));
                    param.put("NAME", rs2.getString(4));
                    param.put("Mobile_No", rs2.getString(5));
                    param.put("ADDRESS", rs2.getString(6));
                    param.put("Email", rs2.getString(7));
                    
                    //param.put("id",billid);
                    //param.put("digit",new NumbertoWord().convert(Integer.parseInt(strSubTotal)));
                    JasperPrint JASP_PRINT=JasperFillManager.fillReport(JASP_REP2, param,jrSource);
                    JasperViewer.viewReport(JASP_PRINT,false);
                }
                catch(Exception e)
                {
                    e.printStackTrace();
                }
                
            }
        
        
        
//        DefaultTableModel model = (DefaultTableModel) this.table_billing.getModel();
//        int row[] = table_billing.getSelectedRows();
//        int colum[] = table_billing.getSelectedColumns();
//        
//        int rows = table_billing.getSelectedRow();
//        int column = table_billing.getSelectedColumn();
//        
//        Object data = table_billing.getValueAt(rows, column);
//        JOptionPane.showMessageDialog(null, data);
        //int[] column = table_billing.getSelectedColumns();
//        String selectdata[][] = new String[row.length][colum.length];
//        
//        for(int i=0;i<row.length;i++)
//        {
//            for(int j=0;j<colum.length;j++)
//            {
//                selectdata[i][j] = String.valueOf(table_billing.getValueAt(row[i],colum[j]));
//            }
//        }
//        for(int i=0;i<row.length;i++)
//        {
//            for(int j=0;j<colum.length;j++)
//            {
//                JOptionPane.showMessageDialog(null,selectdata[i][j]);
//            }
//        }       
        
//        System.out.println(selectdata);
//        selectdata = String.valueOf(table_billing.getValueAt(row,0));
//        selectdata += String.valueOf(" "+table_billing.getValueAt(row,1));
//        selectdata += String.valueOf(" "+table_billing.getValueAt(row,2));
//        selectdata += String.valueOf(" "+table_billing.getValueAt(row,3));
//        selectdata += String.valueOf(" "+table_billing.getValueAt(row,4));
//        selectdata += String.valueOf(" "+table_billing.getValueAt(row,5));
//        System.out.println(selectdata);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Billing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_billing_add;
    private javax.swing.JButton btn_billing_exit;
    private javax.swing.JButton btn_billing_remove;
    private javax.swing.JButton btn_billing_save;
    private javax.swing.JComboBox cmb_billing_category;
    private javax.swing.JComboBox cmb_billing_customername;
    private javax.swing.JComboBox cmb_billing_productname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_billing;
    private javax.swing.JTextField txt_billing_billdate;
    private javax.swing.JTextField txt_billing_note;
    private javax.swing.JTextField txt_billing_price;
    private javax.swing.JTextField txt_billing_quantity;
    private javax.swing.JTextField txt_billing_stock;
    private javax.swing.JTextField txt_billing_subtotal;
    private javax.swing.JTextField txt_billno_billing;
    // End of variables declaration//GEN-END:variables
}
